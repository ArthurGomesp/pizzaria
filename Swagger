openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /user/{id}:
    get:
      tags:
        - user-controller
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
        - user-controller
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
        - user-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /produto/{id}:
    get:
      tags:
        - product-contoller
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
        - product-contoller
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
        - product-contoller
      operationId: create_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
        - product-contoller
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /user:
    post:
      tags:
        - user-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /pedido:
    post:
      tags:
        - pedido-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    UserUpdateDTO:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
        userType:
          type: string
          enum:
            - CLIENT
            - EMPLOYEE
    ProductUpdateDTO:
      type: object
      properties:
        productName:
          type: string
        description:
          type: string
        productType:
          type: string
          enum:
            - DRINK
            - DESSERT
            - PIZZA
        unitaryValue:
          type: number
    UserCreateDTO:
      required:
        - email
        - name
        - password
        - phoneNumber
        - userType
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        phoneNumber:
          type: string
        userType:
          type: string
          enum:
            - CLIENT
            - EMPLOYEE
    ProductCreateDTO:
      required:
        - description
        - productName
        - productType
        - unitaryValue
      type: object
      properties:
        productName:
          type: string
        description:
          type: string
        productType:
          type: string
          enum:
            - DRINK
            - DESSERT
            - PIZZA
        unitaryValue:
          type: number
    ObjectPedido:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        amount:
          type: integer
          format: int32
    PedidoDTO:
      required:
        - objectPedidoList
        - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        objectPedidoList:
          type: array
          items:
            $ref: '#/components/schemas/ObjectPedido'
